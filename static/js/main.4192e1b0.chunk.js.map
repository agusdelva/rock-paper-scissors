{"version":3,"sources":["score.js","header.js","wrapper.js","Token.js","Button.js","Table.js","Rules.js","App.js","index.js"],"names":["ScoreStyled","styled","div","Score","score","useContext","ScoreContext","HeaderStyled","Header","WrapperStyled","Wrapper","children","box","keyframes","TokenStyled","name","color","base","border","isShadowAnimated","playing","colors","paper","rock","scissors","default","Token","onClick","className","src","ButtonStyled","WhiteButton","Button","props","TableStyled","results","elements","Table","setScore","useState","setResults","housePick","setHousePick","setPlaying","pick","setPick","launchHousePick","Promise","resolve","reject","interval","setInterval","min","max","Math","floor","random","setTimeout","clearInterval","a","house","playWithIA","RulesStyled","visible","Rules","setVisible","handleToggleClick","alt","createContext","AppStyled","main","App","Provider","value","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.4192e1b0.chunk.js","sourcesContent":["import React, {useContext} from 'react'\r\nimport styled from 'styled-components'\r\nimport {ScoreContext} from './App'\r\n\r\nconst ScoreStyled = styled.div`\r\n    background: white;\r\n    text-align: center;\r\n    padding: 10px;\r\n    border-radius: 8px;\r\n    width: 80px;\r\n    small {\r\n        color: #2a45c2;\r\n        text-transform: uppercase;\r\n        font-size: 10px;\r\n        font-weight: bold;\r\n        letter-spacing: 1px;\r\n    }\r\n    p {\r\n        color: #565468;\r\n        font-size: 40px;\r\n        margin: 0;\r\n        font-weight: 700;\r\n        position: relative;\r\n    }\r\n    @media screen and (min-width:768px){\r\n        padding: 10px 20px;\r\n        small{\r\n            font-size:16px;\r\n            }\r\n        p{\r\n        font-size: 60px;\r\n        }\r\n    }\r\n`\r\n\r\nfunction Score() {\r\n    const {score} = useContext(ScoreContext)\r\n    return (\r\n        <ScoreStyled>\r\n            <small>Score</small>\r\n            <p>{score}</p>\r\n        </ScoreStyled>\r\n    )\r\n}\r\n\r\nexport default Score","import React from 'react'\r\nimport styled from 'styled-components'\r\nimport Score from './score'\r\n\r\nconst HeaderStyled = styled.div`\r\n    color: white; \r\n    padding: 12px 12px 12px 23px;\r\n    border-radius: .5em;\r\n    display: flex;\r\n    justify-content: space-between;\r\n    align-items: center;\r\n    border: 3px solid rgba(255,255,255, .29);\r\n    h1 {\r\n        font-size: 18px;\r\n        line-height: 16px;\r\n        font-weight: 700;\r\n        margin:0;\r\n        text-transform: uppercase;\r\n    }\r\n    @media screen and (min-width:768px){\r\n        padding:24px;\r\n        h1{\r\n        font-size:30px;\r\n        line-height:.9;\r\n        }\r\n    }\r\n`\r\n\r\nfunction Header () {\r\n    return (\r\n        <HeaderStyled>\r\n            <h1>\r\n                Rock <br/> Paper <br/> Scissors\r\n            </h1>\r\n            <Score/>\r\n        </HeaderStyled>\r\n    )\r\n}\r\n\r\nexport default Header\r\n","import React from 'react'\r\nimport styled from 'styled-components'\r\n\r\nconst WrapperStyled = styled.div`\r\n    max-width: 700px;\r\n    margin: auto;\r\n`\r\n\r\nfunction Wrapper({ children }) {\r\n    return (\r\n        <WrapperStyled>\r\n            {children}\r\n        </WrapperStyled>\r\n    )\r\n}\r\n\r\nexport default Wrapper","import React from 'react'\r\nimport styled, { keyframes } from 'styled-components'\r\n\r\nconst box = keyframes`\r\n    to  {\r\n        transform:rotateY(360deg);\r\n        }\r\n`\r\n\r\nconst TokenStyled = styled.div`\r\n    width: 130px;\r\n    height: 125px;\r\n    padding: ${({name}) => (name === 'default') ? '16px' : '0'};\r\n    border: 15px solid ${({color}) => color.base};\r\n    box-sizing: border-box;\r\n    border-radius: 50%;\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n    box-shadow: 0 5px 0px ${({color}) => color.border};\r\n    cursor: pointer;\r\n    position: relative;\r\n    z-index: 2;\r\n    ${({ isShadowAnimated}) =>  isShadowAnimated && 'box-shadow: 0 0 0 40px rgba(255,255,255,.04), 0 0 0 80px rgba(255,255,255,.03), 0 0 0 120px rgba(255,255,255,.02);'}\r\n    \r\n    &:active {\r\n        transform: scale(.9);\r\n    }\r\n    .box{\r\n        background: ${({name}) => (name === 'default') ? '#122343' : 'white'};\r\n        box-shadow: 0 -4px 0 ${({name}) => (name === 'default') ? 'transparent' : '#babfd4'};\r\n        flex: 1;\r\n        align-self: stretch;\r\n        border-radius: 50%;\r\n        display: flex;\r\n        justify-content: center;\r\n        align-items: center;\r\n        img {\r\n            width: 40%;\r\n            animation: 1s ${({isShadowAnimated}) => isShadowAnimated ? box : '' };\r\n        }\r\n    }\r\n    @media screen and (min-width: 1024px) {\r\n        ${({playing}) => playing ? 'width:300px; height:295px; border-width: 32px;': 'width:200px; height:195px;'}\r\n    }\r\n`\r\nconst colors = {\r\n    paper: {\r\n        base: '#516ef4',\r\n        border: '2543c3',\r\n    },\r\n    rock: {\r\n        base: '#de3a5a',\r\n        border: '#980e31',\r\n    },\r\n    scissors: {\r\n        base: '#eca81e',\r\n        border: '#c76c14',\r\n    },\r\n    default: {\r\n        base: 'transparent',\r\n        border: 'transparent'\r\n    }\r\n\r\n}\r\n\r\nfunction Token({name= 'default', onClick,  isShadowAnimated = false, playing}) {\r\n    function handleClick() {\r\n        if(onClick){\r\n             onClick(name)\r\n        }\r\n    }\r\n    const color = (colors[name]) \r\n    return (\r\n        <TokenStyled color ={color} onClick={handleClick} name={name}  isShadowAnimated={ isShadowAnimated} playing={playing}>\r\n            <div className=\"box\">\r\n                <img src={`./images/icon-${name}.svg`}/>\r\n            </div>\r\n        </TokenStyled>\r\n    )\r\n}\r\n\r\nexport default Token","import React from 'react';\r\nimport styled from 'styled-components'\r\n\r\nconst ButtonStyled = styled.div`\r\n    display: inline-flex;\r\n    border: 1px solid white;\r\n    border-radius: .5em;\r\n    min-width: 128px;\r\n    padding: .7em;\r\n    box-sizing: border-box;\r\n    justify-content:center;\r\n    cursor: pointer;\r\n    text-transform: uppercase;\r\n    letter-spacing: 2.5px;\r\n    :hover {\r\n        background:white;\r\n        color: #101a3f;\r\n    }\r\n`\r\n\r\n\r\nfunction Button({ children,...props}) {\r\n    \r\n    return (\r\n        <ButtonStyled {...props}> \r\n        \r\n            {children}\r\n        </ButtonStyled>\r\n    );\r\n}\r\n\r\nexport const WhiteButton = styled(ButtonStyled)`\r\n    background: white;\r\n    color: #101a3f;\r\n    min-width: 220px;\r\n `\r\n\r\nexport default Button;","import React, {useState, useContext} from 'react'\r\nimport styled from 'styled-components'\r\nimport Token from './Token'\r\nimport {WhiteButton} from './Button'\r\nimport {ScoreContext} from './App'\r\n\r\nconst TableStyled = styled.div`\r\n    display:grid;\r\n    grid-template-columns: 130px 130px;\r\n    justify-content:center;\r\n    justify-items:center;\r\n    grid-gap: 30px 50px;\r\n    margin: 2em 0;\r\n    position:relative;\r\n    & div:nth-of-type(3) {\r\n        grid-column: span 2;\r\n    }\r\n    .in-game {\r\n        text-align:center;\r\n        text-transform:uppercase;\r\n        font-size:.8em;\r\n        font-weight:700;\r\n        letter-spacing: 1px;\r\n    }\r\n    .results{\r\n        text-align: center;\r\n        h2 {\r\n            text-transform: uppercase;\r\n            font-size: 56px;\r\n            margin:10px;\r\n        }\r\n    }\r\n    .line {\r\n        display: ${({playing}) => !playing ? 'block': 'none' };\r\n        height: 14px;\r\n        background: rgba(0,0,0,.2);\r\n        position: absolute;\r\n        width:200px;\r\n        top: 58px;\r\n        &:before {\r\n            content: '';\r\n            height: 14px;\r\n            background: rgba(0,0,0,.2);\r\n            position:absolute;\r\n            left:0;\r\n            right: 0;\r\n            top: 0;\r\n            transform: rotate(60deg);\r\n            transform-origin: left top;\r\n        }\r\n\r\n        &:after {\r\n            content: '';\r\n            height: 14px;\r\n            background: rgba(0,0,0,.2);\r\n            position: absolute;\r\n            left: 0;\r\n            right: 0;\r\n            top:0;\r\n            transform: rotate(-60deg);\r\n            transform-origin: right top;\r\n        }\r\n    }\r\n    @media screen and (min-width: 1024px) {\r\n        grid-template-columns: 300px 300px;\r\n         ${({playing, results}) => (playing && results) && 'grid-template-columns: 300px 110px 110px 300px;'}\r\n\r\n         & div:nth-of-type(3) {\r\n            ${({playing, results}) => (playing && results) && 'grid-column: 2 / 4; grid-row: 1;' }\r\n        } \r\n        .line{\r\n            width: 300px;\r\n        }\r\n        .results{\r\n            display:flex;\r\n            align-items:center;\r\n            justify-content:center;\r\n            flex-direction:column;\r\n        }\r\n        .in-game {\r\n            font-size:1.2em;\r\n            display:flex;\r\n            flex-direction:column;\r\n            > div {\r\n                    order: 2;\r\n                  }\r\n            > p   { \r\n                   order: 1;\r\n                   margin-bottom: 2em;\r\n                  }\r\n            }\r\n        }\r\n`\r\nconst elements = [\r\n    'paper',\r\n    'scissors',\r\n    'rock'\r\n]\r\nfunction Table() {\r\n    // const [score, setScore] = useState(0)\r\n    const {score, setScore} = useContext(ScoreContext)\r\n    const [results, setResults] = useState(' ')\r\n    const [housePick, setHousePick] = useState('default')\r\n    const [playing, setPlaying] = useState(false)\r\n    const[pick, setPick] = useState('')\r\n    function getRandomInt (min,max) {\r\n        return Math.floor(Math.random() * (max-min))\r\n    }\r\n\r\n    function launchHousePick (){\r\n        return new Promise((resolve, reject) => {\r\n            let pick\r\n            const interval = setInterval(() => {\r\n             pick = elements [getRandomInt(0,3)]\r\n             setHousePick(pick)\r\n            },  75)\r\n            setTimeout(() => {\r\n                clearInterval(interval)\r\n                resolve(pick)\r\n            }, 2000)\r\n        })\r\n    }\r\n    async function onClick(name) {\r\n        setPlaying(true)\r\n        setPick(name)\r\n        const house = await launchHousePick()\r\n        // console.log(' la casa eligio' , housePick)\r\n        const results = playWithIA(name, house)\r\n        setResults(results)\r\n        if(results === 'win'){\r\n            setScore(score + 1)\r\n        }\r\n    }\r\n    function playWithIA(pick, housePick) {\r\n        if(housePick === pick) {\r\n            return 'draw'\r\n        }\r\n        if(pick === 'paper'){\r\n           \r\n            if(housePick === 'scissors'){\r\n                return 'lose'\r\n            }\r\n            if(housePick === 'rock'){\r\n                return 'win'\r\n            }\r\n        }\r\n        if(pick === 'scissors'){\r\n            if(housePick === 'paper'){\r\n                return 'win'\r\n            }\r\n            \r\n            if(housePick === 'rock'){\r\n                return 'lose'\r\n            }\r\n        }\r\n        if(pick === 'rock'){\r\n            if(housePick === 'paper'){\r\n                return 'lose'\r\n            } \r\n            if(housePick === 'scissors'){\r\n                return 'win'\r\n            }\r\n           \r\n        }\r\n    }\r\n    function handleTryAgainClick () {\r\n        setPlaying(false)\r\n        setResults('')\r\n    }\r\n    return (\r\n        <TableStyled playing={playing} results={(results  !== '')}>\r\n            <span className=\"line\"></span>\r\n            {\r\n                !playing ? (\r\n                    <>\r\n                        <Token name=\"paper\" onClick={onClick}/>\r\n                        <Token name=\"scissors\" onClick={onClick}/>\r\n                        <Token name=\"rock\" onClick={onClick}/>\r\n                    </>\r\n                ) : (\r\n                    <>\r\n                        <div className=\"in-game\">\r\n                            <Token playing={playing} name={pick} isShadowAnimated={(results === 'win') } />\r\n                            <p>You Picked</p>\r\n                        </div>\r\n                        <div className=\"in-game\">\r\n                            <Token playing={playing} name={housePick} isShadowAnimated={(results === 'lose') }/>\r\n                            <p>The house picked</p>\r\n                        </div>\r\n                        <div className=\"results\">\r\n                            {\r\n                                results && (\r\n                                    <>\r\n                                        <h2>You {results}</h2> \r\n                                         <WhiteButton onClick={handleTryAgainClick}>\r\n                                        Try again\r\n                                        </WhiteButton>\r\n                                    </>\r\n                                            )\r\n                            }\r\n                        </div>\r\n                    </>\r\n                                \r\n                )\r\n            }\r\n        </TableStyled>\r\n    )\r\n}\r\n\r\nexport default Table","import React, {useState} from 'react'\r\nimport styled from 'styled-components'\r\nimport Button from './Button'\r\n\r\nconst RulesStyled = styled.div`\r\n    text-align: center;\r\n    &::before {\r\n            content:'';\r\n            display: ${({visible}) => visible ? 'block' : 'none'};\r\n            /* position:absolute; */\r\n            z-index:2;\r\n            left:0;\r\n            right:0;\r\n            bottom:0;\r\n            top:0;\r\n            background:rgba(0,0,0,.6)\r\n        }\r\n    .close-button {\r\n        margin-top: 2em;\r\n        cursor: pointer;\r\n    }\r\n    .rules-modal {\r\n        background:white;\r\n        padding: 4em 0;\r\n        position: fixed;\r\n        left: 0;\r\n        right: 0;\r\n        top: 0;\r\n        bottom: 0;\r\n        z-index: 3;\r\n        display: flex;\r\n        align-items: center;\r\n        justify-content: space-between;\r\n        flex-direction: column;\r\n        h2{\r\n            color: #3b4262;\r\n            text-transform: uppercase;\r\n            font-weight: 700;\r\n            letter-spacing: -2px;\r\n            margin-bottom: 1em;\r\n        }\r\n    }\r\n    @media screen and (min-width:768px) {\r\n        .button {\r\n            position:fixed;\r\n            right:2em;\r\n            bottom:2em;\r\n        }\r\n        .rules-modal{\r\n            width:400px;\r\n            margin:auto;\r\n            border-radius:10px;\r\n            top:0;\r\n            bottom:initial;\r\n            transform:translateY(50%);\r\n            padding: 2em;\r\n            /* z-index:2; */\r\n            box-sizing: border-box;\r\n            h2{\r\n            font-size:32px;\r\n            align-self:flex-start;\r\n            margin:0 0 1.5em 0;\r\n        }\r\n    }\r\n        .close-button{\r\n            position:absolute;\r\n            right: 2em;\r\n            top:.8em;\r\n        }\r\n    }\r\n`\r\n\r\nfunction Rules() {\r\n    const [visible, setVisible] = useState(false)\r\n    function handleToggleClick() {\r\n        setVisible(!visible)\r\n    }\r\n    return (\r\n        <RulesStyled visible={visible}>\r\n            {\r\n                (visible) && (\r\n            <div className=\"rules-modal\">\r\n                <h2>Rules</h2>\r\n                <img src=\"images/image-rules.svg\"/>\r\n                <img className=\"close-button\" onClick={handleToggleClick} src=\"./images/icon-close.svg\" alt=\"close\" />\r\n            </div>\r\n                )\r\n            }\r\n            <Button onClick={handleToggleClick} className=\"button\">\r\n                Rules\r\n            </Button>\r\n        </RulesStyled>\r\n    )\r\n}\r\n\r\nexport default Rules","import React, {createContext, useState} from 'react'\nimport './App.css';\nimport Header from './header'\nimport styled from 'styled-components'\nimport Wrapper from './wrapper'\nimport Table from './Table'\nimport Rules from './Rules'\n\n\nexport const ScoreContext = createContext(0)\nconst AppStyled = styled.main`\n  background-image: radial-gradient(circle  at top, #1f3757 20%, #131537 100%);\n  color: white;\n  font-family: 'Barlow semi condensed';\n\n  .app-content {\n    padding: 2em ;\n    min-height: 100vh;\n    display: flex;\n    box-sizing: border-box;\n    flex-direction: column;\n    justify-content: space-between;\n  }\n  `\n\nfunction App() {\n  const [score, setScore] = useState(0)\n  return (\n    <ScoreContext.Provider value={{\n      score,\n      setScore,\n      }}>\n      <AppStyled>\n        <Wrapper>\n          <div className=\"app-content\">\n            <Header/>\n            <Table/>\n            <Rules/>\n          </div>\n        </Wrapper>\n      </AppStyled>\n    </ScoreContext.Provider>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n    <App />,document.getElementById('root')\n);\n\n"],"sourceRoot":""}