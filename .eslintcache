[{"C:\\Users\\Usuario\\Desktop\\leonidas-p-p-t\\rock-paper-scissors\\src\\App.js":"1","C:\\Users\\Usuario\\Desktop\\leonidas-p-p-t\\rock-paper-scissors\\src\\header.js":"2","C:\\Users\\Usuario\\Desktop\\leonidas-p-p-t\\rock-paper-scissors\\src\\wrapper.js":"3","C:\\Users\\Usuario\\Desktop\\leonidas-p-p-t\\rock-paper-scissors\\src\\score.js":"4","C:\\Users\\Usuario\\Desktop\\leonidas-p-p-t\\rock-paper-scissors\\src\\index.js":"5","C:\\Users\\Usuario\\Desktop\\leonidas-p-p-t\\rock-paper-scissors\\src\\Table.js":"6","C:\\Users\\Usuario\\Desktop\\leonidas-p-p-t\\rock-paper-scissors\\src\\Token.js":"7","C:\\Users\\Usuario\\Desktop\\leonidas-p-p-t\\rock-paper-scissors\\src\\Button.js":"8","C:\\Users\\Usuario\\Desktop\\leonidas-p-p-t\\rock-paper-scissors\\src\\Rules.js":"9"},{"size":1019,"mtime":1613084121871,"results":"10","hashOfConfig":"11"},{"size":875,"mtime":1612819900967,"results":"12","hashOfConfig":"11"},{"size":308,"mtime":1612819525788,"results":"13","hashOfConfig":"11"},{"size":985,"mtime":1612820076061,"results":"14","hashOfConfig":"11"},{"size":174,"mtime":1613084181462,"results":"15","hashOfConfig":"11"},{"size":6366,"mtime":1613084042599,"results":"16","hashOfConfig":"11"},{"size":2371,"mtime":1613044778789,"results":"17","hashOfConfig":"11"},{"size":765,"mtime":1612819487904,"results":"18","hashOfConfig":"11"},{"size":2499,"mtime":1613085709714,"results":"19","hashOfConfig":"11"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1ijqz9p",{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"27"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"27"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"27"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":1,"source":"34","usedDeprecatedRules":"27"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"37","usedDeprecatedRules":"24"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"27"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"42","usedDeprecatedRules":"27"},"C:\\Users\\Usuario\\Desktop\\leonidas-p-p-t\\rock-paper-scissors\\src\\App.js",[],"C:\\Users\\Usuario\\Desktop\\leonidas-p-p-t\\rock-paper-scissors\\src\\header.js",[],["43","44"],"C:\\Users\\Usuario\\Desktop\\leonidas-p-p-t\\rock-paper-scissors\\src\\wrapper.js",[],["45","46"],"C:\\Users\\Usuario\\Desktop\\leonidas-p-p-t\\rock-paper-scissors\\src\\score.js",[],"C:\\Users\\Usuario\\Desktop\\leonidas-p-p-t\\rock-paper-scissors\\src\\index.js",[],"C:\\Users\\Usuario\\Desktop\\leonidas-p-p-t\\rock-paper-scissors\\src\\Table.js",["47"],"import React, {useState, useContext} from 'react'\r\nimport styled from 'styled-components'\r\nimport Token from './Token'\r\nimport {WhiteButton} from './Button'\r\nimport {ScoreContext} from './App'\r\n\r\nconst TableStyled = styled.div`\r\n    display:grid;\r\n    grid-template-columns: 130px 130px;\r\n    justify-content:center;\r\n    justify-items:center;\r\n    grid-gap: 30px 50px;\r\n    margin: 2em 0;\r\n    position:relative;\r\n    & div:nth-of-type(3) {\r\n        grid-column: span 2;\r\n    }\r\n    .in-game {\r\n        text-align:center;\r\n        text-transform:uppercase;\r\n        font-size:.8em;\r\n        font-weight:700;\r\n        letter-spacing: 1px;\r\n    }\r\n    .results{\r\n        text-align: center;\r\n        h2 {\r\n            text-transform: uppercase;\r\n            font-size: 56px;\r\n            margin:10px;\r\n        }\r\n    }\r\n    .line {\r\n        display: ${({playing}) => !playing ? 'block': 'none' };\r\n        height: 14px;\r\n        background: rgba(0,0,0,.2);\r\n        position: absolute;\r\n        width:200px;\r\n        top: 58px;\r\n        &:before {\r\n            content: '';\r\n            height: 14px;\r\n            background: rgba(0,0,0,.2);\r\n            position:absolute;\r\n            left:0;\r\n            right: 0;\r\n            top: 0;\r\n            transform: rotate(60deg);\r\n            transform-origin: left top;\r\n        }\r\n\r\n        &:after {\r\n            content: '';\r\n            height: 14px;\r\n            background: rgba(0,0,0,.2);\r\n            position: absolute;\r\n            left: 0;\r\n            right: 0;\r\n            top:0;\r\n            transform: rotate(-60deg);\r\n            transform-origin: right top;\r\n        }\r\n    }\r\n    @media screen and (min-width: 1024px) {\r\n        grid-template-columns: 300px 300px;\r\n         ${({playing, results}) => (playing && results) && 'grid-template-columns: 300px 110px 110px 300px;'}\r\n\r\n         & div:nth-of-type(3) {\r\n            ${({playing, results}) => (playing && results) && 'grid-column: 2 / 4; grid-row: 1;' }\r\n        } \r\n        .line{\r\n            width: 300px;\r\n        }\r\n        .results{\r\n            display:flex;\r\n            align-items:center;\r\n            justify-content:center;\r\n            flex-direction:column;\r\n        }\r\n        .in-game {\r\n            font-size:1.2em;\r\n            display:flex;\r\n            flex-direction:column;\r\n            > div {\r\n                    order: 2;\r\n                  }\r\n            > p   { \r\n                   order: 1;\r\n                   margin-bottom: 2em;\r\n                  }\r\n            }\r\n        }\r\n`\r\nconst elements = [\r\n    'paper',\r\n    'scissors',\r\n    'rock'\r\n]\r\nfunction Table() {\r\n    // const [score, setScore] = useState(0)\r\n    const {score, setScore} = useContext(ScoreContext)\r\n    const [results, setResults] = useState(' ')\r\n    const [housePick, setHousePick] = useState('default')\r\n    const [playing, setPlaying] = useState(false)\r\n    const[pick, setPick] = useState('')\r\n    function getRandomInt (min,max) {\r\n        return Math.floor(Math.random() * (max-min))\r\n    }\r\n\r\n    function launchHousePick (){\r\n        return new Promise((resolve, reject) => {\r\n            let pick\r\n            const interval = setInterval(() => {\r\n             pick = elements [getRandomInt(0,3)]\r\n             setHousePick(pick)\r\n            },  75)\r\n            setTimeout(() => {\r\n                clearInterval(interval)\r\n                resolve(pick)\r\n            }, 2000)\r\n        })\r\n    }\r\n    async function onClick(name) {\r\n        setPlaying(true)\r\n        setPick(name)\r\n        const house = await launchHousePick()\r\n        // console.log(' la casa eligio' , housePick)\r\n        const results = playWithIA(name, house)\r\n        setResults(results)\r\n        if(results === 'win'){\r\n            setScore(score + 1)\r\n        }\r\n    }\r\n    function playWithIA(pick, housePick) {\r\n        if(housePick === pick) {\r\n            return 'draw'\r\n        }\r\n        if(pick === 'paper'){\r\n           \r\n            if(housePick === 'scissors'){\r\n                return 'lose'\r\n            }\r\n            if(housePick === 'rock'){\r\n                return 'win'\r\n            }\r\n        }\r\n        if(pick === 'scissors'){\r\n            if(housePick === 'paper'){\r\n                return 'win'\r\n            }\r\n            \r\n            if(housePick === 'rock'){\r\n                return 'lose'\r\n            }\r\n        }\r\n        if(pick === 'rock'){\r\n            if(housePick === 'paper'){\r\n                return 'lose'\r\n            } \r\n            if(housePick === 'scissors'){\r\n                return 'win'\r\n            }\r\n           \r\n        }\r\n    }\r\n    function handleTryAgainClick () {\r\n        setPlaying(false)\r\n        setResults('')\r\n    }\r\n    return (\r\n        <TableStyled playing={playing} results={(results  !== '')}>\r\n            <span className=\"line\"></span>\r\n            {\r\n                !playing ? (\r\n                    <>\r\n                        <Token name=\"paper\" onClick={onClick}/>\r\n                        <Token name=\"scissors\" onClick={onClick}/>\r\n                        <Token name=\"rock\" onClick={onClick}/>\r\n                    </>\r\n                ) : (\r\n                    <>\r\n                        <div className=\"in-game\">\r\n                            <Token playing={playing} name={pick} isShadowAnimated={(results === 'win') } />\r\n                            <p>You Picked</p>\r\n                        </div>\r\n                        <div className=\"in-game\">\r\n                            <Token playing={playing} name={housePick} isShadowAnimated={(results === 'lose') }/>\r\n                            <p>The house picked</p>\r\n                        </div>\r\n                        <div className=\"results\">\r\n                            {\r\n                                results && (\r\n                                    <>\r\n                                        <h2>You {results}</h2> \r\n                                         <WhiteButton onClick={handleTryAgainClick}>\r\n                                        Try again\r\n                                        </WhiteButton>\r\n                                    </>\r\n                                            )\r\n                            }\r\n                        </div>\r\n                    </>\r\n                                \r\n                )\r\n            }\r\n        </TableStyled>\r\n    )\r\n}\r\n\r\nexport default Table","C:\\Users\\Usuario\\Desktop\\leonidas-p-p-t\\rock-paper-scissors\\src\\Token.js",["48"],"import React from 'react'\r\nimport styled, { keyframes } from 'styled-components'\r\n\r\nconst box = keyframes`\r\n    to  {\r\n        transform:rotateY(360deg);\r\n        }\r\n`\r\n\r\nconst TokenStyled = styled.div`\r\n    width: 130px;\r\n    height: 125px;\r\n    padding: ${({name}) => (name === 'default') ? '16px' : '0'};\r\n    border: 15px solid ${({color}) => color.base};\r\n    box-sizing: border-box;\r\n    border-radius: 50%;\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n    box-shadow: 0 5px 0px ${({color}) => color.border};\r\n    cursor: pointer;\r\n    position: relative;\r\n    z-index: 2;\r\n    ${({ isShadowAnimated}) =>  isShadowAnimated && 'box-shadow: 0 0 0 40px rgba(255,255,255,.04), 0 0 0 80px rgba(255,255,255,.03), 0 0 0 120px rgba(255,255,255,.02);'}\r\n    \r\n    &:active {\r\n        transform: scale(.9);\r\n    }\r\n    .box{\r\n        background: ${({name}) => (name === 'default') ? '#122343' : 'white'};\r\n        box-shadow: 0 -4px 0 ${({name}) => (name === 'default') ? 'transparent' : '#babfd4'};\r\n        flex: 1;\r\n        align-self: stretch;\r\n        border-radius: 50%;\r\n        display: flex;\r\n        justify-content: center;\r\n        align-items: center;\r\n        img {\r\n            width: 40%;\r\n            animation: 1s ${({isShadowAnimated}) => isShadowAnimated ? box : '' };\r\n        }\r\n    }\r\n    @media screen and (min-width: 1024px) {\r\n        ${({playing}) => playing ? 'width:300px; height:295px; border-width: 32px;': 'width:200px; height:195px;'}\r\n    }\r\n`\r\nconst colors = {\r\n    paper: {\r\n        base: '#516ef4',\r\n        border: '2543c3',\r\n    },\r\n    rock: {\r\n        base: '#de3a5a',\r\n        border: '#980e31',\r\n    },\r\n    scissors: {\r\n        base: '#eca81e',\r\n        border: '#c76c14',\r\n    },\r\n    default: {\r\n        base: 'transparent',\r\n        border: 'transparent'\r\n    }\r\n\r\n}\r\n\r\nfunction Token({name= 'default', onClick,  isShadowAnimated = false, playing}) {\r\n    function handleClick() {\r\n        if(onClick){\r\n             onClick(name)\r\n        }\r\n    }\r\n    const color = (colors[name]) \r\n    return (\r\n        <TokenStyled color ={color} onClick={handleClick} name={name}  isShadowAnimated={ isShadowAnimated} playing={playing}>\r\n            <div className=\"box\">\r\n                <img src={`./images/icon-${name}.svg`}/>\r\n            </div>\r\n        </TokenStyled>\r\n    )\r\n}\r\n\r\nexport default Token","C:\\Users\\Usuario\\Desktop\\leonidas-p-p-t\\rock-paper-scissors\\src\\Button.js",[],"C:\\Users\\Usuario\\Desktop\\leonidas-p-p-t\\rock-paper-scissors\\src\\Rules.js",["49"],"import React, {useState} from 'react'\r\nimport styled from 'styled-components'\r\nimport Button from './Button'\r\n\r\nconst RulesStyled = styled.div`\r\n    text-align: center;\r\n    &::before {\r\n            content:'';\r\n            display: ${({visible}) => visible ? 'block' : 'none'};\r\n            /* position:absolute; */\r\n            z-index:2;\r\n            left:0;\r\n            right:0;\r\n            bottom:0;\r\n            top:0;\r\n            background:rgba(0,0,0,.6)\r\n        }\r\n    .close-button {\r\n        margin-top: 2em;\r\n        cursor: pointer;\r\n    }\r\n    .rules-modal {\r\n        background:white;\r\n        padding: 4em 0;\r\n        position: fixed;\r\n        left: 0;\r\n        right: 0;\r\n        top: 0;\r\n        bottom: 0;\r\n        z-index: 3;\r\n        display: flex;\r\n        align-items: center;\r\n        justify-content: space-between;\r\n        flex-direction: column;\r\n        h2{\r\n            color: #3b4262;\r\n            text-transform: uppercase;\r\n            font-weight: 700;\r\n            letter-spacing: -2px;\r\n            margin-bottom: 1em;\r\n        }\r\n    }\r\n    @media screen and (min-width:768px) {\r\n        .button {\r\n            position:fixed;\r\n            right:2em;\r\n            bottom:2em;\r\n        }\r\n        .rules-modal{\r\n            width:400px;\r\n            margin:auto;\r\n            border-radius:10px;\r\n            top:0;\r\n            bottom:initial;\r\n            transform:translateY(50%);\r\n            padding: 2em;\r\n            /* z-index:2; */\r\n            box-sizing: border-box;\r\n            h2{\r\n            font-size:32px;\r\n            align-self:flex-start;\r\n            margin:0 0 1.5em 0;\r\n        }\r\n    }\r\n        .close-button{\r\n            position:absolute;\r\n            right: 2em;\r\n            top:.8em;\r\n        }\r\n    }\r\n`\r\n\r\nfunction Rules() {\r\n    const [visible, setVisible] = useState(false)\r\n    function handleToggleClick() {\r\n        setVisible(!visible)\r\n    }\r\n    return (\r\n        <RulesStyled visible={visible}>\r\n            {\r\n                (visible) && (\r\n            <div className=\"rules-modal\">\r\n                <h2>Rules</h2>\r\n                <img src=\"images/image-rules.svg\"/>\r\n                <img className=\"close-button\" onClick={handleToggleClick} src=\"./images/icon-close.svg\" alt=\"close\" />\r\n            </div>\r\n                )\r\n            }\r\n            <Button onClick={handleToggleClick} className=\"button\">\r\n                Rules\r\n            </Button>\r\n        </RulesStyled>\r\n    )\r\n}\r\n\r\nexport default Rules",{"ruleId":"50","replacedBy":"51"},{"ruleId":"52","replacedBy":"53"},{"ruleId":"50","replacedBy":"54"},{"ruleId":"52","replacedBy":"55"},{"ruleId":"56","severity":1,"message":"57","line":114,"column":21,"nodeType":"58","messageId":"59","endLine":114,"endColumn":49,"fix":"60"},{"ruleId":"61","severity":1,"message":"62","line":77,"column":17,"nodeType":"63","endLine":77,"endColumn":57},{"ruleId":"61","severity":1,"message":"62","line":84,"column":17,"nodeType":"63","endLine":84,"endColumn":52},"no-native-reassign",["64"],"no-negated-in-lhs",["65"],["64"],["65"],"no-whitespace-before-property","Unexpected whitespace before property getRandomInt(0,3).","MemberExpression","unexpectedWhitespace",{"range":"66","text":"67"},"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","no-global-assign","no-unsafe-negation",[3211,3212],""]